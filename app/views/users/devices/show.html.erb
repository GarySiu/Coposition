<% content_for :outside_container do %>
  <div id='map'></div>
  <div class="bottom-panel">
    <div class="buttons"><%= link_to("Delete history", user_device_checkins_path(current_user.url_id, @device.id), { method: :delete, class: "btn red white-text", data: { confirm: 'Delete all checkins for this device?' } })%>
      <%= link_to("Delete device", user_device_path(current_user.url_id, @device), { method: :delete, class: "btn red white-text", data: { confirm: 'Are you sure?' } })%>
      <%= link_to("Check-in now", new_user_device_checkin_path(current_user.url_id, @device.id), class: "btn green white-text", id: "checkin-button", remote: true) %>
    </div>
    <%= will_paginate @checkins %>
  </div>
  <script>

    L.mapbox.accessToken = 'pk.eyJ1IjoiZ2FyeXNpdSIsImEiOiJjaWxjZjN3MTMwMDZhdnNtMnhsYmh4N3lpIn0.RAGGQ0OaM81HVe0OiAKE0w';
    // var map = L.mapbox.map('map', 'garysiu.pal12l2j');
    var map = L.mapbox.map('map', null, {maxZoom: 18} );
      // .setView([51.50, -0.12], 13);
    var layers = {
      Light: L.mapbox.tileLayer('mapbox.light'),
      Dark: L.mapbox.tileLayer('mapbox.dark'),
      Streets: L.mapbox.tileLayer('mapbox.streets'),
      Hybrid: L.mapbox.tileLayer('mapbox.streets-satellite'),
      Satellite: L.mapbox.tileLayer('mapbox.satellite'),
      "High contrast": L.mapbox.tileLayer('mapbox.high-contrast'),
    };
    layers.Light.addTo(map).on('ready', function() {

      checkins = <%= raw @checkins.to_json %>

      renderMarkers()
    });
    // To be re-added later. Remember: layers do NOT persist.
    // L.control.layers(layers).addTo(map);
    // map.addControl(L.mapbox.shareControl());
    map.addControl(L.mapbox.geocoderControl('mapbox.places'));

    function refreshMarkers(){
      markers.clearLayers();
      renderMarkers();
    }

    function renderMarkers(){
      markers = new L.MarkerClusterGroup();
        for (var i = 0; i < checkins.length; i++) {
          var checkin = checkins[i];
          var marker = L.marker(new L.LatLng(checkin.lat, checkin.lng), {
            icon: L.mapbox.marker.icon({
              'marker-symbol': 'heliport',
              'marker-color': '#ff6900'
            })
          });
          marker.bindPopup('<h3>ID: ' + checkin.id + '</h3>' + (checkin.address || checkin.fogged_area))

          marker.on('click', function() {
            map.panTo(this.getLatLng());
          });

          markers.addLayer(marker);
        }

      map.addLayer(markers);
      map.fitBounds(markers.getBounds());
    }

  var $newCheckinButton = $('<%= j link_to("Check-in", new_user_device_checkin_path(current_user.url_id,
    @device.id), class: "btn green white-text", method: "post", id: "checkin-button", remote: true) %>');
  var $moreOptionsLink = $('<%=  j link_to(" ...more options", new_user_device_checkin_path(current_user.url_id, @device.id) ) %>')
  var checkinPath = '<%= j user_device_checkins_path(current_user.url_id, @device.id) %>';
  $('#checkin-button')
    .toggleClass('green disabled')
    .html('Getting position')
    .after($moreOptionsLink);
  navigator.geolocation.getCurrentPosition(function(position){
    var checkin = {
      'checkin[lat]': position.coords.latitude.toFixed(6),
      'checkin[lng]': position.coords.longitude.toFixed(6)
    }
    checkinPath += '?'
    checkinPath += $.param(checkin)
    $newCheckinButton.attr('href', checkinPath);
    $('#checkin-button').replaceWith($newCheckinButton);
  })
  var checkins = <%= raw @checkins.to_json %>

  </script>
  <style>

    footer {
      display: none;
    }

    #map {
      width:100%;
      position:absolute !important;
      top: 64px;
      bottom: 100px;
    }

    .bottom-panel {
      position: absolute;
      bottom: 0px;
      display: block;
      height: 100px;
      width: 100%;
      text-align: center;
      background: white;
    }

    .bottom-panel * {
      margin: 0;
    }

    .buttons {
      margin: 10px;
    }
  </style>
<% end %>
